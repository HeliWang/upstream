""" This class represents an undirected graph
 using adjacency list representation

Graph Class:
  V(): return # of vertices
  adj(v): return a list of the vertices adjacent to vertex v
"""
from collections import defaultdict
import os


class Graph:
    def __init__(self, vertices):
        """
        :param vertices: # No. of vertices
        """
        self.V = vertices
        self.graph = defaultdict(list)  # default dictionary to store graph

    def add_edge(self, u, v):
        """Add an edge to graph

        :param u: vertex incident to the edge
        :param v: vertex incident to the edge
        """
        self.graph[u].append(v)
        self.graph[v].append(u)

    def adj(self, v):
        """
        :param v: the vertex
        :return: a list of the vertices adjacent to vertex v
        """
        return self.graph[v]

    def import_graph(path):
        """Read input graph generated by https://csacademy.com/app/graph_editor/

        :param path: local path of the text file
        :return: a Graph Obj
        """
        g = Graph(0)
        with open(os.path.join(os.path.dirname(__file__), path), "r") as fi:
            for line in fi:
                parts = line.split()
                if len(parts) == 1:
                    g.V = int(parts[0]) + 1
                else:
                    g.add_edge(int(parts[0]), int(parts[1]))
        return g
